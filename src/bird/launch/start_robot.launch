<launch>
  <!-- Test the odometry node (and lower levels). -->

  <!-- URDF parameter. -->
  <arg name="urdf"  default="bot.urdf"/>
  <arg name="model" default="$(find bot_description)/urdf/$(arg urdf)"/>

  <!-- Rviz configuration file parameter. -->
  <arg name="cfg"   default="$(find bird)/rviz/slam.rviz"/>

  <!-- Load the URDF file into the robot_description parameter. -->
  <param name="robot_description" textfile="$(arg model)"/>

  <!-- Publish all the robot frames. -->
  <node name="robot_state_publisher"
	pkg="robot_state_publisher"
  	type="robot_state_publisher"/>

  <!-- Run wheel control and sensor processes -->
	<node pkg="bird"
	type="wheelcontrol.py" 
	name="wheel_control" 
	output="screen"/>
	
	<node pkg="bird" 
	type="odometry.py" 
	name="odometry"
	output="screen"/>

	<!-- Start the LIDAR -->
	<node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen" required="true">
		<param name="serial_port"         type="string" value="/dev/ttyUSB0"/>
		<param name="serial_baudrate"     type="int"    value="115200"/><!--A1/A2 -->
		<param name="frame_id"            type="string" value="laser"/>
		<param name="inverted"            type="bool"   value="false"/>
		<param name="angle_compensate"    type="bool"   value="true"/>
	</node>

  <!-- Run the rviz visualization, with the specified config file -->
  <!-- Kill everything if this stops. -->
  <node pkg="rviz"
  	type="rviz"
	name="rviz"
	args="-d $(arg cfg)"
	output="screen"
	required="true"/>

	<node pkg="bird" 
	type="LaserPoints" 
	name="laser_converter"
	output="screen"/>

	<node pkg="bird" 
	type="slam.py" 
	name="slam"
	output="screen"/>

	<node pkg="bird" 
	type="plan.py" 
	name="plan"
	output="screen"/>
</launch>
